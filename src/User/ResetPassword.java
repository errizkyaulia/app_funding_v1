/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User;

import Connection.ConnectionDatabase;
import Hotel.Login;
import config.BCrypt;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Rizky
 */
public class ResetPassword extends javax.swing.JFrame {

    /**
     * Creates new form ResetPassword
     */
    public ResetPassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        resetPasswordField = new javax.swing.JPasswordField();
        confirmResetPasswordField = new javax.swing.JPasswordField();
        confirmResetButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cancleResetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reset Password");

        jLabel1.setText("New Password");

        jLabel2.setText("Confirm New Password");

        confirmResetButton.setText("Confirm");
        confirmResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmResetButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Change your password here");

        cancleResetButton.setText("Cancle");
        cancleResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(confirmResetButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cancleResetButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(44, 44, 44)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(21, 21, 21)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(resetPasswordField)
                                .addComponent(confirmResetPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(resetPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(confirmResetPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmResetButton)
                    .addComponent(cancleResetButton))
                .addContainerGap(165, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void confirmResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmResetButtonActionPerformed
        // TODO add your handling code here:
        // Connect into database and fetching user data
        ConnectionDatabase database = new ConnectionDatabase();
        Connection conn = database.connect(); // Memanggil metode connect untuk membuat koneksi ke database
        if (resetPass(conn)){
            
        }
        
    }//GEN-LAST:event_confirmResetButtonActionPerformed

    private void cancleResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleResetButtonActionPerformed
        // TODO add your handling code here:
        
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancleResetButtonActionPerformed

    private boolean resetPass(Connection conn){
        String pass = new String(resetPasswordField.getPassword());
        String conPass = new String(confirmResetPasswordField.getPassword());
        if (conPass.equals(pass)){
            // Check if input length is more or equals 8 digits
            if (pass.length() < 8) {
                // Display an error message or handle invalid OTP length
                JOptionPane.showMessageDialog(this, "Password must be 8 digits long or more.", "Invalid Password", JOptionPane.ERROR_MESSAGE);
                return false; // Exit the method early
            }
            // Encrypt user Password before storing into Database
            String hashedPassword = hashPassword(pass);
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin merubah Password?", "Konfirmasi Reset", JOptionPane.YES_NO_OPTION);
    
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    // Query untuk check In
                    String query = "UPDATE user SET password = ? WHERE userid = ?";
                    // Persiapkan statement
                    PreparedStatement statement = conn.prepareStatement(query);
                    statement.setString(1, hashedPassword);
                    //statement.setString(2, userid);

                    // Eksekusi kueri
                    int rowsUpdated = statement.executeUpdate(); // Menggunakan executeUpdate() untuk menjalankan query UPDATE
                    if (rowsUpdated > 0) {
                        JOptionPane.showMessageDialog(null, "Password Berhasil Diganti", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Gagal Mengganti Password", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                    // Tangani pengecualian sesuai kebutuhan Anda
                    JOptionPane.showMessageDialog(null, "Gagal mengganti Password", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        return false;
    }
    
    
    // Metode untuk menghash password menggunakan BCrypt
    private String hashPassword(String password) {
        return BCrypt.hashpw(password, BCrypt.gensalt());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResetPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancleResetButton;
    private javax.swing.JButton confirmResetButton;
    private javax.swing.JPasswordField confirmResetPasswordField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField resetPasswordField;
    // End of variables declaration//GEN-END:variables
}
