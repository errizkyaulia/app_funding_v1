/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Hotel;
import config.BCrypt;
import Connection.ConnectionDatabase;
import Connection.ConnectionEmail;
import java.sql.*;
import javax.swing.JOptionPane;
import java.io.IOException;
import java.util.Properties;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Rizky
 */
public class Signup extends javax.swing.JFrame {

    /**
     * Creates new form Signup
     */
    public Signup() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fullnameSignupTextField = new javax.swing.JTextField();
        usernameSignupTextField = new javax.swing.JTextField();
        emailSignupTextField = new javax.swing.JTextField();
        phonenumberSignupTextField = new javax.swing.JTextField();
        passwordSignupField = new javax.swing.JPasswordField();
        confirmPasswordSignupField = new javax.swing.JPasswordField();
        signupButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Signup");
        setBackground(new java.awt.Color(190, 152, 152));

        jPanel1.setBackground(new java.awt.Color(190, 152, 152));

        signupButton.setText("Signup");
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Full Name");

        jLabel2.setText("Username");

        jLabel3.setText("Email");

        jLabel4.setText("Phone Number");

        jLabel5.setText("Password");

        jLabel6.setText("Confirm Password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(confirmPasswordSignupField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phonenumberSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernameSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fullnameSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(signupButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(64, 64, 64))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(passwordSignupField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addComponent(jLabel6))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fullnameSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(4, 4, 4)
                .addComponent(phonenumberSignupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addComponent(passwordSignupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmPasswordSignupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signupButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginButton)
                .addGap(14, 14, 14))
        );

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Sign.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        // Membuat objek untuk frame login
        Login loginFrame = new Login();
        
        // Menampilkan frame login
        loginFrame.setVisible(true);
        
        // Menghilangkan frame signup
        this.setVisible(false);
    }//GEN-LAST:event_loginButtonActionPerformed

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
        // TODO add your handling code here:
        // Connect into database and fetching user data
        ConnectionDatabase database = new ConnectionDatabase();
        Connection conn = database.connect(); // Memanggil metode connect untuk membuat koneksi ke database
        
        if (conn != null) {
            if (inputSignup(conn)) {
                JOptionPane.showMessageDialog(null, "Signup Successful");
                // Reset fields after successful signup if needed
            } else {
                JOptionPane.showMessageDialog(null, "Signup Failed");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Database");
        }
    }//GEN-LAST:event_signupButtonActionPerformed

    // Metode untuk menghash password menggunakan BCrypt
    private String hashPassword(String password) {
        return BCrypt.hashpw(password, BCrypt.gensalt());
    }
    
    // Metode Signup
    private boolean inputSignup(Connection conn){
        // Terima Input User
        String username = usernameSignupTextField.getText();
        String fullname = fullnameSignupTextField.getText();
        String email = emailSignupTextField.getText();
        String phonenumber = phonenumberSignupTextField.getText();
        String password = new String(passwordSignupField.getPassword());
        String confirmPassword = new String(confirmPasswordSignupField.getPassword());

        // Cek Password
        if (confirmPassword.equals(password)) {
            // Check if input length is more or equals 8 digits
            if (password.length() < 8) {
                // Display an error message or handle invalid OTP length
                JOptionPane.showMessageDialog(this, "Password must be 8 digits long or more.", "Invalid Password", JOptionPane.ERROR_MESSAGE);
                return false; // Exit the method early
            }
            
            // Check if input length is more or equals 8 digits
            if (username.length() < 3) {
                // Display an error message or handle invalid OTP length
                JOptionPane.showMessageDialog(this, "Username must be 3 chars long or more.", "Invalid Username", JOptionPane.ERROR_MESSAGE);
                return false; // Exit the method early
            }
            
            // Check email format
            if (!isValidEmail(email)) {
                JOptionPane.showMessageDialog(this, "Invalid email format.", "Invalid Email", JOptionPane.ERROR_MESSAGE);
                return false;
            }

            // Check if input is numeric
            if (!phonenumber.matches("\\d+")) {
                // Display an error message or handle non-numeric input
                JOptionPane.showMessageDialog(this, "Phone Number must be numeric", "Invalid Phone Number", JOptionPane.ERROR_MESSAGE);
                return false; // Exit the method early
            }
            
            // Cek DATA Username, Email, Phone Number
            if (cekData(conn, username, email, phonenumber)) {
                // User already exists
                JOptionPane.showMessageDialog(null, "Username, email, and phone number already used!");
                return false;
            }

            // Encrypt user Password before storing into Database
            String hashedPassword = hashPassword(password);
            
            // Generate Token
            String token = generateToken(conn);
            
            String accountstate = "Pending Activation";
            // Execute SQL query to insert signup data into the database
            String query = "INSERT INTO user (username, fullname, email, phonenumber, password, accountstate, token) VALUES (?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, username);
                pstmt.setString(2, fullname);
                pstmt.setString(3, email);
                pstmt.setString(4, phonenumber);
                pstmt.setString(5, hashedPassword);
                pstmt.setString(6, accountstate);
                pstmt.setString(7, token);
                pstmt.executeUpdate();
                
                // Mengirimkan Email Verifikasi
                ConnectionEmail emailSender = new ConnectionEmail();
                String web_url = PROPS.getProperty("WEB_HOST");
                String emailSubject = "Verifikasi Akun";
                String emailBody = "Klik link berikut untuk verifikasi akun Anda: " + web_url + "verify.php?token=" + token;
                return emailSender.sendEmail(email, emailSubject, emailBody, null);
            } catch (SQLException ex) {
                ex.printStackTrace();
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Password does not match!");
            return false;
        }
    }
    
    // Metode Cek Email is Valid
    private boolean isValidEmail(String email) {
        // Definisikan pola regex untuk format email
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";

        Pattern pattern = Pattern.compile(emailRegex);
        Matcher matcher = pattern.matcher(email);

        // Return true jika format email sesuai
        return matcher.matches();
    }
    
    // Metode Cek Database
    private boolean cekData(Connection conn, String username, String email, String phonenumber) {
        String query = "SELECT * FROM user WHERE username = ? OR email = ? OR phonenumber = ?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, username);
            pstmt.setString(2, email);
            pstmt.setString(3, phonenumber);
            ResultSet rs = pstmt.executeQuery();
            return rs.next(); // If ResultSet has next, means data exists
        } catch (SQLException ex) {
            ex.printStackTrace();
            return true; // Return true to indicate data exists (conservative approach)
        }
    }
    
    // Generate Verification Token
    public static String generateToken(Connection conn) {
        String token = null;
        boolean isUnique = false;

        while (!isUnique) {
            // Generate random UUID
            UUID uuid = UUID.randomUUID();
            // Convert UUID to string
            token = uuid.toString();

            // Check if the token already exists in the database
            String query = "SELECT token FROM user WHERE token = ?";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, token);
                ResultSet rs = pstmt.executeQuery();
                if (!rs.next()) {
                    // Token is unique, break the loop
                    isUnique = true;
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                // Handle exception
            }
        }

        return token;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Signup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confirmPasswordSignupField;
    private javax.swing.JTextField emailSignupTextField;
    private javax.swing.JTextField fullnameSignupTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordSignupField;
    private javax.swing.JTextField phonenumberSignupTextField;
    private javax.swing.JButton signupButton;
    private javax.swing.JTextField usernameSignupTextField;
    // End of variables declaration//GEN-END:variables
    private static final Properties PROPS = new Properties();

        static {
            try {
                PROPS.load(Signup.class.getClassLoader().getResourceAsStream("Config/application.properties"));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
}
