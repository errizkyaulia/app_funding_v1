/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Hotel;

import Connection.ConnectionDatabase;
import GUI.Loading;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Rizky
 */
public class ReservationMenu extends javax.swing.JFrame {

    /**
     * Creates new form Reservation
     */
    public ReservationMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        TabPanel = new javax.swing.JTabbedPane();
        FindRoom = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cekInDateChooser = new com.toedter.calendar.JDateChooser();
        cekOutDateChooser = new com.toedter.calendar.JDateChooser();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableRoomsTable = new javax.swing.JTable();
        RoomDetails = new javax.swing.JPanel();
        Checkout = new javax.swing.JPanel();
        Confirmation = new javax.swing.JPanel();
        Menu = new javax.swing.JPanel();
        findRoomButton = new javax.swing.JButton();
        myReservationButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reservation");
        setMaximizedBounds(getMaximizedBounds());
        setPreferredSize(new java.awt.Dimension(1000, 400));

        TabPanel.setPreferredSize(new java.awt.Dimension(700, 405));

        FindRoom.setBackground(new java.awt.Color(153, 255, 204));

        jLabel1.setText("Check In Date");

        jLabel2.setText("Check Out Date");

        searchButton.setText("Search Room");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(204, 255, 255));

        availableRoomsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        availableRoomsTable.setColumnSelectionAllowed(true);
        availableRoomsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(availableRoomsTable);
        availableRoomsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout FindRoomLayout = new javax.swing.GroupLayout(FindRoom);
        FindRoom.setLayout(FindRoomLayout);
        FindRoomLayout.setHorizontalGroup(
            FindRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cekInDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cekOutDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        FindRoomLayout.setVerticalGroup(
            FindRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindRoomLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(FindRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FindRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(FindRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(cekInDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cekOutDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(searchButton))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
        );

        TabPanel.addTab("tab1", FindRoom);

        RoomDetails.setBackground(new java.awt.Color(204, 255, 204));

        javax.swing.GroupLayout RoomDetailsLayout = new javax.swing.GroupLayout(RoomDetails);
        RoomDetails.setLayout(RoomDetailsLayout);
        RoomDetailsLayout.setHorizontalGroup(
            RoomDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
        );
        RoomDetailsLayout.setVerticalGroup(
            RoomDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        TabPanel.addTab("tab2", RoomDetails);

        javax.swing.GroupLayout CheckoutLayout = new javax.swing.GroupLayout(Checkout);
        Checkout.setLayout(CheckoutLayout);
        CheckoutLayout.setHorizontalGroup(
            CheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 755, Short.MAX_VALUE)
        );
        CheckoutLayout.setVerticalGroup(
            CheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        TabPanel.addTab("tab3", Checkout);

        javax.swing.GroupLayout ConfirmationLayout = new javax.swing.GroupLayout(Confirmation);
        Confirmation.setLayout(ConfirmationLayout);
        ConfirmationLayout.setHorizontalGroup(
            ConfirmationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 755, Short.MAX_VALUE)
        );
        ConfirmationLayout.setVerticalGroup(
            ConfirmationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        TabPanel.addTab("tab4", Confirmation);

        Menu.setBackground(new java.awt.Color(204, 255, 255));
        Menu.setPreferredSize(new java.awt.Dimension(200, 400));

        findRoomButton.setText("Find Room");
        findRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findRoomButtonActionPerformed(evt);
            }
        });

        myReservationButton.setText("My Reservation");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(findRoomButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(myReservationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        MenuLayout.setVerticalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(findRoomButton)
                .addGap(35, 35, 35)
                .addComponent(myReservationButton)
                .addGap(38, 38, 38)
                .addComponent(loginButton)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(TabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(TabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        // Mendapatkan tanggal hari ini
        Date today = new Date();
        Date cekIn = cekInDateChooser.getDate();
        Date cekOut = cekOutDateChooser.getDate();
        
        // Pengecekan apakah tanggal check-in tidak lebih kecil dari tanggal hari ini
        if (cekIn.before(today)) {
            JOptionPane.showMessageDialog(null, "Maaf, Anda tidak dapat memilih tanggal kemarin untuk check-in.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            // Tambahkan kode lain di sini sesuai kebutuhan Anda, misalnya menampilkan pesan kesalahan
        } else {
            // Pengecekan apakah tanggal check-out lebih besar dari tanggal check-in
            if (cekOut.after(cekIn)) {
                // Pastikan tanggal check-in dan check-out tidak sama
                if (cekOut.equals(cekIn)) {
                    JOptionPane.showMessageDialog(null, "Maaf, tanggal check-out harus berbeda dengan tanggal check-in.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                    // Tambahkan kode lain di sini sesuai kebutuhan Anda, misalnya menampilkan pesan kesalahan
                } else {
                    
                    Loading loadingScreen = new Loading();
                    loadingScreen.setVisible(true);
                    
                    // Connect into database and fetching user data
                    ConnectionDatabase database = new ConnectionDatabase();
                    Connection conn = database.connect(); // Memanggil metode connect untuk membuat koneksi ke database

                    // Menampilkan kamar yang tersedia dan memberi tahu pengguna
                    showAvailableRooms(conn, cekIn, cekOut);
                    loadingScreen.dispose();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Maaf, tanggal check-out harus setelah tanggal check-in.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                // Tambahkan kode lain di sini sesuai kebutuhan Anda, misalnya menampilkan pesan kesalahan
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void findRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findRoomButtonActionPerformed
        // TODO add your handling code here:
        TabPanel.setSelectedIndex(0);
    }//GEN-LAST:event_findRoomButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_loginButtonActionPerformed

    private void showAvailableRooms(Connection conn, Date checkInDate, Date checkOutDate) {
        try {
            // Query untuk mengambil informasi kamar yang tersedia pada rentang tanggal tertentu
            String query = "SELECT * FROM room WHERE room_id NOT IN (SELECT room_id FROM reservation WHERE (? < check_out AND ? > check_in))";

            // Persiapkan statement
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setDate(1, new java.sql.Date(checkInDate.getTime())); // Set tanggal cek-in
            statement.setDate(2, new java.sql.Date(checkOutDate.getTime())); // Set tanggal cek-out

            // Eksekusi kueri
            ResultSet rs = statement.executeQuery();

            // Buat model tabel
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Available Room");
            model.addColumn("Room Type");
            model.addColumn("Total Bed");
            model.addColumn("Max People");
            model.addColumn("Room Price per Night");
            model.addColumn("Select"); // Kolom tambahan untuk tombol Select

            
            // Memproses hasil query untuk menambahkan baris ke dalam model tabel
            while (rs.next()) {
                String roomId = rs.getString("room_id");
                String roomType = rs.getString("room_type");
                String totalBed = rs.getString("room_bed");
                String roomCapacity = rs.getString("room_capacity");
                String roomPrice = rs.getString("room_price");
                // Ambil informasi lainnya sesuai kebutuhan Anda

                // Tambahkan baris ke dalam model tabel
                model.addRow(new Object[]{roomId, roomType, totalBed, roomCapacity, roomPrice, "Select"});
            }
            
            // Set model tabel
            availableRoomsTable.setModel(model);

            // Tambahkan ActionListener untuk tombol Select
            availableRoomsTable.getColumn("Select").setCellRenderer(new ButtonRenderer());
            availableRoomsTable.getColumn("Select").setCellEditor(new ButtonEditor(new JCheckBox()));
            
            // Tutup statement dan result set
            statement.close();
            rs.close();
            
            // Open Table
            // TabPanel.setSelectedIndex(1);
        } catch (SQLException e) {
            e.printStackTrace();
            // Tangani pengecualian sesuai kebutuhan Anda
            JOptionPane.showMessageDialog(null, "Gagal Memuat Kamar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    // Renderer untuk tombol Select
    class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value,
                                                       boolean isSelected, boolean hasFocus,
                                                       int row, int column) {
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    // Editor untuk tombol Select
    class ButtonEditor extends DefaultCellEditor {
        protected JButton button;

        private String label;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
        }

        public Component getTableCellEditorComponent(JTable table, Object value,
                                                     boolean isSelected, int row, int column) {
            label = (value == null) ? "" : value.toString();
            button.setText(label);
            return button;
        }

        public Object getCellEditorValue() {
            return new String(label);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Checkout;
    private javax.swing.JPanel Confirmation;
    private javax.swing.JPanel FindRoom;
    private javax.swing.JPanel Menu;
    private javax.swing.JPanel RoomDetails;
    private javax.swing.JTabbedPane TabPanel;
    private javax.swing.JTable availableRoomsTable;
    private com.toedter.calendar.JDateChooser cekInDateChooser;
    private com.toedter.calendar.JDateChooser cekOutDateChooser;
    private javax.swing.JButton findRoomButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton myReservationButton;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
