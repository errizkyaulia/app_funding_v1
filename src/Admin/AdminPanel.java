/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Admin;

import Connection.ConnectionDatabase;
import Hotel.Login;
import User.Logout;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rizky
 */
public class AdminPanel extends javax.swing.JFrame {

    /**
     * Creates new form AdminPanel
     */
    public AdminPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdminMenu = new javax.swing.JPanel();
        reservationButton = new javax.swing.JButton();
        roomManagementButton = new javax.swing.JButton();
        adminProfileButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        AdminTabPanel = new javax.swing.JTabbedPane();
        ReservationTab = new javax.swing.JPanel();
        reservationTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        searchReservationButton = new javax.swing.JButton();
        checkInButton = new javax.swing.JButton();
        checkOutButton = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        RoomManagementTab = new javax.swing.JPanel();
        reservationTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        reservationTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        searchAdminButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        adminNameTextField = new javax.swing.JTextPane();
        adminRoleChooser = new javax.swing.JComboBox<>();
        adminStatusBox = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        adminTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMIN");
        setPreferredSize(new java.awt.Dimension(1100, 400));

        AdminMenu.setBackground(new java.awt.Color(255, 255, 204));

        reservationButton.setText("Reservation");
        reservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationButtonActionPerformed(evt);
            }
        });

        roomManagementButton.setText("Room Management");
        roomManagementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomManagementButtonActionPerformed(evt);
            }
        });

        adminProfileButton.setText("Admin Profile");
        adminProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminProfileButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdminMenuLayout = new javax.swing.GroupLayout(AdminMenu);
        AdminMenu.setLayout(AdminMenuLayout);
        AdminMenuLayout.setHorizontalGroup(
            AdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reservationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomManagementButton, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(adminProfileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        AdminMenuLayout.setVerticalGroup(
            AdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminMenuLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(reservationButton)
                .addGap(18, 18, 18)
                .addComponent(roomManagementButton)
                .addGap(18, 18, 18)
                .addComponent(adminProfileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(logoutButton)
                .addGap(60, 60, 60))
        );

        ReservationTab.setPreferredSize(new java.awt.Dimension(1100, 400));

        reservationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(reservationTable);

        jLabel1.setText("ID Reservation:");

        searchReservationButton.setText("Search");
        searchReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchReservationButtonActionPerformed(evt);
            }
        });

        checkInButton.setText("Check In");
        checkInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInButtonActionPerformed(evt);
            }
        });

        checkOutButton.setText("Check Out");
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButtonActionPerformed(evt);
            }
        });

        jButton11.setText("Refund");

        javax.swing.GroupLayout ReservationTabLayout = new javax.swing.GroupLayout(ReservationTab);
        ReservationTab.setLayout(ReservationTabLayout);
        ReservationTabLayout.setHorizontalGroup(
            ReservationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservationTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReservationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(ReservationTabLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(reservationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(searchReservationButton)
                        .addGap(217, 217, 217)
                        .addComponent(checkInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(checkOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReservationTabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ReservationTabLayout.setVerticalGroup(
            ReservationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservationTabLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(ReservationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(searchReservationButton)
                    .addComponent(checkInButton)
                    .addComponent(checkOutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        AdminTabPanel.addTab("Reservation", ReservationTab);

        reservationTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(reservationTable1);

        jLabel2.setText("ID Room:");

        jButton8.setText("Search");

        jButton9.setText("Set Available");

        jButton10.setText("Set Unavailable");

        javax.swing.GroupLayout RoomManagementTabLayout = new javax.swing.GroupLayout(RoomManagementTab);
        RoomManagementTab.setLayout(RoomManagementTabLayout);
        RoomManagementTabLayout.setHorizontalGroup(
            RoomManagementTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RoomManagementTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RoomManagementTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(RoomManagementTabLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reservationTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)))
                .addContainerGap())
        );
        RoomManagementTabLayout.setVerticalGroup(
            RoomManagementTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RoomManagementTabLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(RoomManagementTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservationTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        AdminTabPanel.addTab("Room Management", RoomManagementTab);

        jLabel3.setText("Admin Name:");

        jLabel4.setText("Admin Role:");

        jLabel5.setText("Admin Status:");

        searchAdminButton.setText("Search");

        jScrollPane3.setViewportView(adminNameTextField);

        adminRoleChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminStatusBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(adminTable);

        jButton1.setText("Insert/Update");

        jLabel6.setText("Admin Password:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(adminRoleChooser, 0, 200, Short.MAX_VALUE)
                    .addComponent(adminStatusBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchAdminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchAdminButton)))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(adminRoleChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminStatusBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton1))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        AdminTabPanel.addTab("Admin", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AdminMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(AdminTabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdminMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AdminTabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchReservationButtonActionPerformed
        // TODO add your handling code here:
        // Connect into database and fetching user data
        ConnectionDatabase database = new ConnectionDatabase();
        Connection conn = database.connect(); // Memanggil metode connect untuk membuat koneksi ke database

        try {
            // Query untuk mengambil informasi kamar
            String query = "SELECT * FROM reservation r JOIN user u ON r.userid = u.userid WHERE reservation_id = ?";

            // Persiapkan statement
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, reservationTextField.getText());

            // Eksekusi kueri
            ResultSet rs = statement.executeQuery();

            // Buat model tabel
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Room Number");
            model.addColumn("Check In");
            model.addColumn("Check Out");
            model.addColumn("Bills");
            model.addColumn("Status");
            model.addColumn("Reservation Notes");
            model.addColumn("Full Name"); // Kolom tambahan untuk tombol Select


            // Memproses hasil query untuk menambahkan baris ke dalam model tabel
            while (rs.next()) {
                String roomId = rs.getString("room_id");
                String checkIn = rs.getString("check_in");
                String checkOut = rs.getString("check_out");
                String Bills = rs.getString("reservation_bills");
                String billsStatus = rs.getString("bill_status");
                String notes = rs.getString("reservation_notes");
                String FullName = rs.getString("fullname");

                // Tambahkan baris ke dalam model tabel
                model.addRow(new Object[]{roomId, checkIn, checkOut, Bills, billsStatus, notes, FullName});
            }

            // Set model tabel
            reservationTable.setModel(model);

            // Tutup statement dan result set
            statement.close();
            rs.close();
        } catch (SQLException e) {
            e.printStackTrace();
            // Tangani pengecualian sesuai kebutuhan Anda
            JOptionPane.showMessageDialog(null, "Gagal Memuat Kamar", "Error", JOptionPane.ERROR_MESSAGE);
        }finally {
            // Menutup koneksi setelah selesai digunakan
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                // Tangani kesalahan penutupan koneksi
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_searchReservationButtonActionPerformed

    private void checkInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInButtonActionPerformed
        // TODO add your handling code here:
        String cekInID = reservationTextField.getText();
        // Connect into database and fetching user data
        ConnectionDatabase database = new ConnectionDatabase();
        Connection conn = database.connect(); // Memanggil metode connect untuk membuat koneksi ke database
        // Mendapatkan tanggal hari ini
        java.util.Date today = new java.util.Date();
        try {
            // Query untuk check In
            String query = "UPDATE reservation SET bill_status = ?, reservation_notes = ? WHERE reservation_id = ? AND reservation_status = ?";
            // Persiapkan statement
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, "Paid via Cash");
            statement.setString(2, "Check In: " + today);
            statement.setString(3, cekInID); // Mengatur nilai untuk parameter kedua (reservation_id)
            statement.setString(4, "Booked");

            // Eksekusi kueri
            int rowsUpdated = statement.executeUpdate(); // Menggunakan executeUpdate() untuk menjalankan query UPDATE
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(null, "Berhasil Check In Pada: " + today, "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal Mengupdate Check In", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Tangani pengecualian sesuai kebutuhan Anda
            JOptionPane.showMessageDialog(null, "Gagal Mengupdate Check In", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Menutup koneksi setelah selesai digunakan
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                // Tangani kesalahan penutupan koneksi
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_checkInButtonActionPerformed

    private void checkOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButtonActionPerformed
        // TODO add your handling code here:
        String cekOutID = reservationTextField.getText();
        // Connect into database and fetching user data
        ConnectionDatabase database = new ConnectionDatabase();
        Connection conn = database.connect(); // Memanggil metode connect untuk membuat koneksi ke database
        // Mendapatkan tanggal hari ini
        java.util.Date today = new java.util.Date();
        String CheckOut = checkOutcheker(conn, cekOutID);
        try {
            // Query untuk check In
            String query = "UPDATE reservation SET reservation_status = ?, reservation_notes = ? WHERE reservation_id = ? AND bill_status = ?";
            // Persiapkan statement
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, "Check Out");
            statement.setString(2, CheckOut + " AND Check Out: " + today);
            statement.setString(3, cekOutID); // Mengatur nilai untuk parameter kedua (reservation_id)
            statement.setString(4, "Paid via Cash");

            // Eksekusi kueri
            int rowsUpdated = statement.executeUpdate(); // Menggunakan executeUpdate() untuk menjalankan query UPDATE
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(null, "Berhasil Check In Pada: " + today, "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal Mengupdate Check In", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Tangani pengecualian sesuai kebutuhan Anda
            JOptionPane.showMessageDialog(null, "Gagal Mengupdate Check In", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Menutup koneksi setelah selesai digunakan
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                // Tangani kesalahan penutupan koneksi
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_checkOutButtonActionPerformed

    private String checkOutcheker(Connection conn, String ID){
        String checkOutNotes = "";
        try {
            // Query untuk check Out
            String query = "SELECT reservation_notes FROM reservation WHERE reservation_id = ? AND bill_status = ?";
            // Persiapkan statement
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, ID);
            statement.setString(2, "Paid via Cash");

            // Eksekusi kueri
            ResultSet rs = statement.executeQuery();

            // Periksa apakah ResultSet mengandung baris
            if (rs.next()) {
                checkOutNotes = rs.getString("reservation_notes");
            } else {
                JOptionPane.showMessageDialog(null, "Reservasi dengan ID " + ID + " Belum melalukan Check In", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Tangani pengecualian sesuai kebutuhan Anda
            JOptionPane.showMessageDialog(null, "Gagal Mengecek Check Out", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return checkOutNotes;
    }
    
    private void adminProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminProfileButtonActionPerformed
        // TODO add your handling code here:
        AdminTabPanel.setSelectedIndex(2);
    }//GEN-LAST:event_adminProfileButtonActionPerformed

    private void reservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationButtonActionPerformed
        // TODO add your handling code here:
        AdminTabPanel.setSelectedIndex(0);
    }//GEN-LAST:event_reservationButtonActionPerformed

    private void roomManagementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomManagementButtonActionPerformed
        // TODO add your handling code here:
        AdminTabPanel.setSelectedIndex(1);
    }//GEN-LAST:event_roomManagementButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        new Logout().removeUser();
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminMenu;
    private javax.swing.JTabbedPane AdminTabPanel;
    private javax.swing.JPanel ReservationTab;
    private javax.swing.JPanel RoomManagementTab;
    private javax.swing.JTextPane adminNameTextField;
    private javax.swing.JButton adminProfileButton;
    private javax.swing.JComboBox<String> adminRoleChooser;
    private javax.swing.JComboBox<String> adminStatusBox;
    private javax.swing.JTable adminTable;
    private javax.swing.JButton checkInButton;
    private javax.swing.JButton checkOutButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton reservationButton;
    private javax.swing.JTable reservationTable;
    private javax.swing.JTable reservationTable1;
    private javax.swing.JTextField reservationTextField;
    private javax.swing.JTextField reservationTextField1;
    private javax.swing.JButton roomManagementButton;
    private javax.swing.JButton searchAdminButton;
    private javax.swing.JButton searchReservationButton;
    // End of variables declaration//GEN-END:variables
}
